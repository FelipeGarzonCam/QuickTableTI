@model List<QuickTableProyect.Dominio.MenuItem>

@section Styles {
    @* <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/admin-lte@3.1/dist/css/adminlte.min.css" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />      
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css"> *@
    <style>
    /* Estilo para la tabla con fondo oscuro */
        #menuItemsTable {
            background-color: #343a40;
            color: white;
        }

            #menuItemsTable thead th {
                border-bottom: 1px solid #6c757d;
                padding: 8px 16px;
                position: relative;
            }

        .sortable {
            cursor: pointer;
            user-select: none;
        }

        /* Estilo minimalista para las flechas */
        .sort-icon {
            position: absolute;
            right: 5px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 14px;
            opacity: 0.5;
        }

            .sort-icon.active {
                opacity: 1;
                color: #45aaf2;
            }

        /* Campo de búsqueda con estilo oscuro */
        #searchInput {
            background-color: #2d3339;
            border: none;
            color: white;
            padding: 10px 15px;
        }

            #searchInput::placeholder {
                color: #adb5bd;
            }

        .pagination {
            margin-top: 20px;
        }

        .page-item.active .page-link {
            background-color: #007bff;
            border-color: #007bff;
        }
    </style>
}
<div class="container-fluid mt-4">
    <h2>@ViewBag.Title</h2>

    <a asp-action="CrearMenuItem" class="btn btn-success mb-3"><i class="fas fa-plus"></i> Agregar Item</a>

    <!-- Campo de búsqueda -->
    <div class="mb-3">
        <input type="text" id="searchInput" class="form-control" placeholder="Buscar por Plato..." />
    </div>

    <table class="table" id="menuItemsTable">
        <thead>
            <tr>
                <th scope="col" data-column="Id" data-order="asc" class="sortable">
                    ID
                    <span class="sort-icon">
                        <i class="bi bi-caret-up-fill"></i>
                    </span>
                </th>
                <th scope="col" data-column="Nombre" data-order="asc" class="sortable">
                    Plato
                    <span class="sort-icon">
                        <i class="bi bi-caret-up-fill"></i>
                    </span>
                </th>
                <th scope="col" data-column="Categoria" data-order="asc" class="sortable">
                    Categoría
                    <span class="sort-icon">
                        <i class="bi bi-caret-up-fill"></i>
                    </span>
                </th>
                <th scope="col" data-column="Descripcion" data-order="asc" class="sortable">
                    Descripción
                    <span class="sort-icon">
                        <i class="bi bi-caret-up-fill"></i>
                    </span>
                </th>
                <th scope="col" data-column="Precio" data-order="asc" class="sortable">
                    Precio
                    <span class="sort-icon">
                        <i class="bi bi-caret-up-fill"></i>
                    </span>
                </th>
                <th scope="col">Acciones</th>
            </tr>
        </thead>
        <tbody>
            <!-- Los datos se insertan acá -->
        </tbody>
    </table>

    <!-- Controles de paginación -->
    <nav>
        <ul class="pagination justify-content-center" id="pagination">
            <!-- Páginas generadas dinámicamente -->
        </ul>
    </nav>

</div>

<!-- Modal de confirmación de eliminación -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirmación de eliminación</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                ¿Está seguro de que desea eliminar este item del menú?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <a id="confirmDeleteButton" class="btn btn-danger">Eliminar</a>
            </div>
        </div>
    </div>
</div>
@section Scripts {
  @*   <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/admin-lte@3.1/dist/js/adminlte.min.js"></script> *@
    <script>
        $(document).ready(function () {
            var currentPage = 1;
            var totalPages = 1;
            var pageSize = 10;
            var sortColumn = 'Id';
            var sortOrder = 'asc';
            var searchTerm = '';

            // Función para cargar los datos
            function loadData() {
                $.ajax({
                    url: '@Url.Action("ObtenerMenuItems", "Administrador")',
                    type: 'GET',
                    data: {
                        page: currentPage,
                        pageSize: pageSize,
                        sortColumn: sortColumn,
                        sortOrder: sortOrder,
                        searchTerm: searchTerm
                    },
                    success: function (data) {
                        totalPages = data.totalPages;
                        renderTable(data.items);
                        renderPagination();
                        updateSortIcons();
                    },
                    error: function (xhr, status, error) {
                        alert('Ocurrió un error al cargar los datos: ' + error);
                    }
                });
            }

            // Función para renderizar la tabla
            function renderTable(items) {
                var rows = '';
                $.each(items, function (index, item) {
                    rows += '<tr>';
                    rows += '<td>' + item.id + '</td>';
                    rows += '<td>' + item.nombre + '</td>';
                    rows += '<td>' + item.categoria + '</td>';
                    rows += '<td>' + item.descripcion + '</td>';
                    rows += '<td>$' + item.precio + '</td>';
                    rows += '<td>';
                    rows += '<a class="btn btn-warning btn-sm" href="/Administrador/EditarMenuItem/' + item.id + '">';
                    rows += '<i class="fa fa-edit"></i>';
                    rows += '</a> ';
                    rows += '<button class="btn btn-danger btn-sm" onclick="showDeleteModal(' + item.id + ')">';
                    rows += '<i class="fa fa-trash"></i>';
                    rows += '</button>';
                    rows += '</td>';
                    rows += '</tr>';
                });
                $('#menuItemsTable tbody').html(rows);
            }

            // Función para renderizar la paginación
            function renderPagination() {
                var pagination = '';

                // Rango de páginas a mostrar
                var maxPagesToShow = 5;
                var startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));
                var endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);

                // Ajustar el inicio si cerca del final
                if (endPage - startPage < maxPagesToShow - 1) {
                    startPage = Math.max(1, endPage - maxPagesToShow + 1);
                }

                // "Anterior"
                if (currentPage > 1) {
                    pagination += '<li class="page-item"><a class="page-link" href="#" data-page="' + (currentPage - 1) + '">Anterior</a></li>';
                } else {
                    pagination += '<li class="page-item disabled"><span class="page-link">Anterior</span></li>';
                }

                // Páginas
                for (var i = startPage; i <= endPage; i++) {
                    if (i === currentPage) {
                        pagination += '<li class="page-item active"><span class="page-link">' + i + '</span></li>';
                    } else {
                        pagination += '<li class="page-item"><a class="page-link" href="#" data-page="' + i + '">' + i + '</a></li>';
                    }
                }

                //"Siguiente"
                if (currentPage < totalPages) {
                    pagination += '<li class="page-item"><a class="page-link" href="#" data-page="' + (currentPage + 1) + '">Siguiente</a></li>';
                } else {
                    pagination += '<li class="page-item disabled"><span class="page-link">Siguiente</span></li>';
                }

                // Mostrar la página actual y la cantidad total de páginas
                pagination += '<li class="page-item disabled"><span class="page-link">Página ' + currentPage + ' de ' + totalPages + '</span></li>';

                $('#pagination').html(pagination);
            }

            // Evento de clic en los enlaces de paginación
            $('#pagination').on('click', 'a.page-link', function (e) {
                e.preventDefault();
                var selectedPage = parseInt($(this).data('page'));
                if (selectedPage !== currentPage) {
                    currentPage = selectedPage;
                    loadData();
                }
            });

            // Evento para ordenar las columnas
            $('#menuItemsTable thead').on('click', 'th.sortable', function () {
                var column = $(this).data('column');

                // Si se hace clic en la misma columna, alternar el orden
                if (sortColumn === column) {
                    sortOrder = sortOrder === 'asc' ? 'desc' : 'asc';
                } else {
                    sortColumn = column;
                    sortOrder = 'asc';
                }

                currentPage = 1; // Reiniciar a la primera página
                loadData();
            });

            // Actualizar los iconos de ordenamiento
            function updateSortIcons() {
                // Primero eliminar todas las clases y restablecer todos los iconos
                $('.sort-icon i').removeClass('bi-caret-up-fill bi-caret-down-fill').addClass('bi-caret-up-fill');
                $('.sort-icon').removeClass('active');

                // Luego actualizar solo la columna activa
                var activeHeader = $('th[data-column="' + sortColumn + '"]');
                var sortIcon = activeHeader.find('.sort-icon');
                sortIcon.addClass('active');

                // Cambiar el ícono según el orden
                if (sortOrder === 'asc') {
                    sortIcon.find('i').removeClass('bi-caret-down-fill').addClass('bi-caret-up-fill');
                } else {
                    sortIcon.find('i').removeClass('bi-caret-up-fill').addClass('bi-caret-down-fill');
                }
            }

            // Evento para el campo de búsqueda
            $('#searchInput').on('keyup', function () {
                searchTerm = $(this).val();
                currentPage = 1; // Reiniciar a la primera página
                loadData();
            });

            // Función para mostrar el modal de eliminación
            window.showDeleteModal = function (id) {
                $('#confirmDeleteButton').attr('href', '@Url.Action("EliminarMenuItem", "Administrador")' + '?id=' + id);
                $('#deleteModal').modal('show');
            };

            loadData();
        });
    </script>
}
